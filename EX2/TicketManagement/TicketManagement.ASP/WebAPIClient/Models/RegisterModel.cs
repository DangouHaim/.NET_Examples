// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace TicketManagement.ASP.WebAPI.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class RegisterModel
    {
        /// <summary>
        /// Initializes a new instance of the RegisterModel class.
        /// </summary>
        public RegisterModel() { }

        /// <summary>
        /// Initializes a new instance of the RegisterModel class.
        /// </summary>
        public RegisterModel(string name, string eMail, string password, string passwordConfirm)
        {
            Name = name;
            EMail = eMail;
            Password = password;
            PasswordConfirm = passwordConfirm;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eMail")]
        public string EMail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "passwordConfirm")]
        public string PasswordConfirm { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (EMail == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EMail");
            }
            if (Password == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Password");
            }
            if (PasswordConfirm == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PasswordConfirm");
            }
        }
    }
}
